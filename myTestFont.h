
#ifndef myTestFont_H
#define myTestFont_H

#include "pyfont.h"

namespace myTestFont
{
    const uint8_t data[] =
    {
			0x00, 0x00, 0x1C, 0xBE, 0x1C, 0x06, 0x02, 0x06, 0x28, 0x7C, 0x28, 0x7C, 0x28, 0x2C, 0x7E, 0x34,
			0x24, 0x10, 0x08, 0x24, 0x60, 0x90, 0x90, 0x60, 0xF0, 0x10, 0x10, 0xE0, 0x90, 0x90, 0xFC, 0x06,
			0x7C, 0x82, 0x82, 0x7C, 0x28, 0x10, 0x28, 0x10, 0x10, 0x7C, 0x10, 0x10, 0xC0, 0x10, 0x10, 0x10,
			0x80, 0xC0, 0x38, 0x06, 0x7C, 0xB2, 0x9A, 0x7C, 0x08, 0x84, 0xFE, 0x80, 0xC4, 0xA2, 0x92, 0x8C,
			0x44, 0x92, 0x92, 0x6C, 0x1E, 0x10, 0x10, 0xFE, 0x9E, 0x92, 0x92, 0x62, 0x7C, 0x92, 0x92, 0x64,
			0x02, 0xE2, 0x12, 0x0E, 0x6C, 0x92, 0x92, 0x6C, 0x4C, 0x92, 0x92, 0x7C, 0x48, 0xC8, 0x10, 0x28,
			0x44, 0x28, 0x28, 0x28, 0x28, 0x44, 0x28, 0x10, 0x04, 0x02, 0xB2, 0x0C, 0x38, 0x44, 0x92, 0xAA,
			0xF2, 0x84, 0x78, 0xFC, 0x12, 0x12, 0xFC, 0xFE, 0x92, 0x92, 0x6C, 0x7C, 0x82, 0x82, 0x44, 0xFE,
			0x82, 0x82, 0x7C, 0xFE, 0x92, 0x92, 0x82, 0xFE, 0x12, 0x12, 0x02, 0x7C, 0x82, 0x92, 0xF4, 0xFE,
			0x10, 0x10, 0xFE, 0xFE, 0x42, 0x82, 0x82, 0x7E, 0xFE, 0x10, 0x28, 0xC6, 0xFE, 0x80, 0x80, 0x80,
			0xFE, 0x04, 0x08, 0x04, 0xFE, 0xFE, 0x04, 0x08, 0x10, 0xFE, 0x7C, 0x82, 0x82, 0x7C, 0xFE, 0x12,
			0x12, 0x0C, 0x7C, 0x82, 0xC2, 0xFC, 0xFE, 0x12, 0x12, 0xEC, 0x4C, 0x92, 0x92, 0x64, 0x02, 0x02,
			0xFE, 0x02, 0x02, 0x7E, 0x80, 0x80, 0x7E, 0x3E, 0x40, 0x80, 0x40, 0x3E, 0xFE, 0x40, 0x20, 0x40,
			0xFE, 0xC6, 0x28, 0x10, 0x28, 0xC6, 0x06, 0x08, 0xF0, 0x08, 0x06, 0xE2, 0x92, 0x8A, 0x86, 0xFE,
			0x82, 0x82, 0x06, 0x18, 0x60, 0x82, 0x82, 0xFE, 0x08, 0x04, 0x02, 0x04, 0x08, 0x80, 0x80, 0x80,
			0x80, 0x06, 0x70, 0x88, 0x88, 0xF8, 0xFE, 0x88, 0x88, 0x70, 0x70, 0x88, 0x88, 0x70, 0x88, 0x88,
			0xFE, 0x70, 0xA8, 0xA8, 0x90, 0x10, 0xFC, 0x12, 0x18, 0xA4, 0xA4, 0x78, 0xFE, 0x08, 0x08, 0xF0,
			0xFA, 0x80, 0x7A, 0xFE, 0x20, 0x50, 0x88, 0xFE, 0xF8, 0x08, 0xF8, 0x08, 0xF0, 0xF8, 0x08, 0x08,
			0xF0, 0x70, 0x88, 0x88, 0x70, 0xF8, 0x28, 0x28, 0x10, 0x10, 0x28, 0x28, 0xF8, 0xF0, 0x08, 0x08,
			0x90, 0xA8, 0xA8, 0x48, 0x08, 0x7E, 0x88, 0x78, 0x80, 0x80, 0xF8, 0x38, 0x40, 0x80, 0x40, 0x38,
			0x78, 0x80, 0x60, 0x80, 0x78, 0x88, 0x50, 0x20, 0x50, 0x88, 0x18, 0xA0, 0xA0, 0x78, 0xC8, 0xA8,
			0xA8, 0x98, 0x10, 0xFE, 0x82, 0xFE, 0x82, 0xFE, 0x10, 0x10, 0x08, 0x10, 0x20, 0x10, 0xFE, 0xFE,
			0xFE, 0xFE, 0xFE, 0x04, 0x0A, 0x04, 0xF8, 0x8C, 0x8E, 0x8C, 0xF8, 0x54, 0x38, 0x6C, 0x38, 0x54,
			0xE0, 0xBE, 0xE0, 0x70, 0x88, 0x88, 0xF8, 0x90, 0xFE, 0x4A, 0x4A, 0x34, 0x0C, 0x50, 0xA0, 0x50,
			0x0C, 0xC0, 0xB0, 0x98, 0xB0, 0xC0, 0x98, 0xE4, 0x02, 0x02, 0xE4, 0x98, 0x1C, 0x20, 0xF8, 0x24,
			0x18, 0x08, 0xF8, 0x08, 0xF8, 0x08
    };
    const uint16_t offsets[] =
    {
			0x000, 0x002, 0x005, 0x008, 0x00D, 0x010, 0x014, 0x01F, 0x020, 0x022, 0x024, 0x027, 0x02C, 0x02D, 0x030, 0x031,
			0x034, 0x038, 0x03C, 0x040, 0x044, 0x048, 0x04C, 0x050, 0x054, 0x058, 0x05C, 0x05D, 0x05E, 0x061, 0x065, 0x068,
			0x06C, 0x073, 0x077, 0x07B, 0x07F, 0x083, 0x087, 0x08B, 0x08F, 0x093, 0x094, 0x098, 0x09C, 0x0A0, 0x0A5, 0x0AA,
			0x0AE, 0x0B2, 0x0B6, 0x0BA, 0x0BE, 0x0C3, 0x0C7, 0x0CC, 0x0D1, 0x0D6, 0x0DB, 0x0DF, 0x0E2, 0x0E5, 0x0E8, 0x0ED,
			0x0F1, 0x0F2, 0x0F6, 0x0FA, 0x0FD, 0x101, 0x105, 0x108, 0x10C, 0x110, 0x111, 0x113, 0x117, 0x118, 0x11D, 0x121,
			0x125, 0x129, 0x12D, 0x130, 0x134, 0x137, 0x13B, 0x140, 0x145, 0x14A, 0x14E, 0x152, 0x155, 0x156, 0x159, 0x15E,
			0x163, 0x166, 0x16B, 0x170, 0x173, 0x178, 0x17C, 0x181, 0x186, 0x18C, 0x191
    };
    const uint8_t sizes[] =
    {
			0x02, 0x03, 0x03, 0x05, 0x03, 0x04, 0x0B, 0x01, 0x02, 0x02, 0x03, 0x05, 0x01, 0x03, 0x01, 0x03,
			0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x01, 0x01, 0x03, 0x04, 0x03, 0x04,
			0x07, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x01, 0x04, 0x04, 0x04, 0x05, 0x05, 0x04,
			0x04, 0x04, 0x04, 0x04, 0x05, 0x04, 0x05, 0x05, 0x05, 0x05, 0x04, 0x03, 0x03, 0x03, 0x05, 0x04,
			0x01, 0x04, 0x04, 0x03, 0x04, 0x04, 0x03, 0x04, 0x04, 0x01, 0x02, 0x04, 0x01, 0x05, 0x04, 0x04,
			0x04, 0x04, 0x03, 0x04, 0x03, 0x04, 0x05, 0x05, 0x05, 0x04, 0x04, 0x03, 0x01, 0x03, 0x05, 0x05,
			0x03, 0x05, 0x05, 0x03, 0x05, 0x04, 0x05, 0x05, 0x06, 0x05, 0x05
    };

    const PyFont font(107, 32, data, offsets, sizes);
}

#endif //myTestFont_H
